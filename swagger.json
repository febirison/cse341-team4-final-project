{
  "openapi": "3.0.0",
  "info": {
    "title": "Campus Coordinator API",
    "description": "This is an API server for the Campus Coordinator API project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Students",
      "description": "Operations related to students"
    },
    {
      "name": "Courses",
      "description": "Operations related to courses"
    },
    {
      "name": "Clubs",
      "description": "Operations related to clubs"
    },
    {
      "name": "Rooms",
      "description": "Operations related to rooms"
    }
  ],
  "paths": {
    "/student": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get all students",
        "responses": {
          "200": {
            "description": "List of student",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create a new student",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully"
          }
        }
      }
    },
    "/student/{id}": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get a student by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "summary": "Update a student by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student updated successfully"
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "summary": "Delete a student by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Student deleted successfully"
          },
          "404": {
            "description": "Student not found"
          }
        }
      }
    },
    "/course": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get all course",
        "responses": {
          "200": {
            "description": "List of course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Create a new courses",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created successfully"
          }
        }
      }
    },
    "/course/{id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get a course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Update a course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Course updated successfully"
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Delete a course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Course deleted successfully"
          },
          "404": {
            "description": "Course not found"
          }
        }
      }
    },
    "/club": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Get all clubs",
        "responses": {
          "200": {
            "description": "List of club",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Club"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clubs"
        ],
        "summary": "Create a new club",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Club"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Club created successfully"
          }
        }
      }
    },
    "/club/{id}": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Get a club by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Club data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Club"
                }
              }
            }
          },
          "404": {
            "description": "Club not found"
          }
        }
      },
      "put": {
        "tags": [
          "Clubs"
        ],
        "summary": "Update a club by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Club"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Club updated successfully"
          },
          "404": {
            "description": "Club not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Clubs"
        ],
        "summary": "Delete a club by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Club deleted successfully"
          },
          "404": {
            "description": "Club not found"
          }
        }
      }
    },
    "/room": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get all rooms",
        "responses": {
          "200": {
            "description": "List of room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rooms"
        ],
        "summary": "Create a new room",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully"
          }
        }
      }
    },
    "/room/{id}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get a room by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          }
        }
      },
      "put": {
        "tags": [
          "Rooms"
        ],
        "summary": "Update a room by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room updated successfully"
          },
          "404": {
            "description": "Room not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Rooms"
        ],
        "summary": "Delete a room by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Room deleted successfully"
          },
          "404": {
            "description": "Room not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Student": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Charlie"
          },
          "lastName": {
            "type": "string",
            "example": "Lee"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"],
            "example": "other"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "example": "2006-03-02T00:00:00.000Z"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "charlie.lee@example.com"
          },
          "password": {
            "type": "string",
            "description": "Hashed password",
            "example": "hashedpassword3"
          },
          "githubId": {
            "type": "string",
            "example": "charlieGithub"
          },
          "profilePicture": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/images/charlie.jpg"
          },
          "courses": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "MongoDB ObjectId reference to Course"
            },
            "example": []
          },
          "clubs": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "MongoDB ObjectId reference to Club"
            },
            "example": []
          },
          "phoneNumber": {
            "type": "string",
            "example": "345-678-9012"
          }
        },
        "required": [
          "name",
          "lastName",
          "gender",
          "dateOfBirth",
          "email",
          "password"
        ]
      },

      "Course": {
        "type": "object",
        "properties": {
          "title": {
          "type": "string",
          "example": "Intro to Programming"
          },
          "description": {
          "type": "string",
          "example": "Learn JavaScript fundamentals"
          },
          "instructor": {
          "type": "string",
          "description": "MongoDB ObjectId reference to Instructor",
          "example": "664b8df7254bd4e3f9a7f9b30"
          },
          "students": {
          "type": "array",
            "items": {
            "type": "string",
            "description": "MongoDB ObjectId reference to Student"
            },
            "example": ["664b8df7254bd4e3f9a7f9b31", "664b8df7254bd4e3f9a7f9b32"]
          },
          "rooms": {
            "type": "string",
            "description": "MongoDB ObjectId reference to Room",
            "example": "664b8df7254bd4e3f9a7f9b33"
          }
        },
        "required": ["title", "description", "instructor", "rooms"]
      },

      "Club": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Art Club"
          },
          "description": {
            "type": "string",
            "example": "Painting, drawing, and sculpture."
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "MongoDB ObjectId reference to Student"
            },
            "example": []
          },
          "meetingStartTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-12T14:30:00.000Z"
          },
          "meetingEndTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-12T16:30:00.000Z"
          }
        },
        "required": [
          "name",
          "description",
          "meetingStartTime",
          "meetingEndTime"
        ]
      },

      "Room": {
        "type": "object",
        "properties": {
          "buildingName": {
            "type": "string",
            "example": "Art Center"
          },
          "roomNumber": {
            "type": "string",
            "example": "303"
          },
          "capacity": {
            "type": "integer",
            "example": 25
          },
          "students": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "664b8df7254bd4e3f9a7f9b31"
            }
          }
        },
        "required": [
          "buildingName",
          "roomNumber",
          "capacity"
        ]
      }
    }
  }
}
