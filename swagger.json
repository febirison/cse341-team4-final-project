{
  "openapi": "3.0.0",
  "info": {
    "title": "Student Management API",
    "version": "1.0.0",
    "description": "API for managing students, courses, clubs, and rooms."
  },
  "servers": [
    {
      "url": "https://cse341-project-princesses.onrender.com",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "Students",
      "description": "Operations related to students"
    },
    {
      "name": "Courses",
      "description": "Operations related to courses"
    },
    {
      "name": "Clubs",
      "description": "Operations related to clubs"
    },
    {
      "name": "Rooms",
      "description": "Operations related to rooms"
    }
  ],
  "paths": {
    "/student": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get all student",
        "responses": {
          "200": {
            "description": "List of student",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create a new studen",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully"
          }
        }
      }
    },
    "/student/{id}": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get a studen by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "summary": "Update a studen by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student updated successfully"
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "summary": "Delete a studen by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Student deleted successfully"
          },
          "404": {
            "description": "Student not found"
          }
        }
      }
    },
    "/course": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get all course",
        "responses": {
          "200": {
            "description": "List of course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Create a new cours",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created successfully"
          }
        }
      }
    },
    "/course/{id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get a cours by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Update a cours by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Course updated successfully"
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Delete a cours by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Course deleted successfully"
          },
          "404": {
            "description": "Course not found"
          }
        }
      }
    },
    "/club": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Get all club",
        "responses": {
          "200": {
            "description": "List of club",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Club"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clubs"
        ],
        "summary": "Create a new clu",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Club"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Club created successfully"
          }
        }
      }
    },
    "/club/{id}": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Get a clu by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Club data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Club"
                }
              }
            }
          },
          "404": {
            "description": "Club not found"
          }
        }
      },
      "put": {
        "tags": [
          "Clubs"
        ],
        "summary": "Update a clu by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Club"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Club updated successfully"
          },
          "404": {
            "description": "Club not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Clubs"
        ],
        "summary": "Delete a clu by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Club deleted successfully"
          },
          "404": {
            "description": "Club not found"
          }
        }
      }
    },
    "/room": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get all room",
        "responses": {
          "200": {
            "description": "List of room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rooms"
        ],
        "summary": "Create a new roo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully"
          }
        }
      }
    },
    "/room/{id}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get a roo by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          }
        }
      },
      "put": {
        "tags": [
          "Rooms"
        ],
        "summary": "Update a roo by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room updated successfully"
          },
          "404": {
            "description": "Room not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Rooms"
        ],
        "summary": "Delete a roo by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Room deleted successfully"
          },
          "404": {
            "description": "Room not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Student": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "male"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "2000-01-01"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "phoneNumber": {
            "type": "string",
            "example": "123-456-7890"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "courseName": {
            "type": "string",
            "example": "Math 101"
          },
          "teacherName": {
            "type": "string",
            "example": "Mr. Smith"
          },
          "roomNumber": {
            "type": "string",
            "example": "Room A"
          },
          "dayOfWeek": {
            "type": "string",
            "example": "Monday"
          },
          "time": {
            "type": "string",
            "example": "08:00"
          }
        }
      },
      "Club": {
        "type": "object",
        "properties": {
          "clubName": {
            "type": "string",
            "example": "Science Club"
          },
          "president": {
            "type": "string",
            "example": "Alice"
          },
          "advisor": {
            "type": "string",
            "example": "Mrs. Johnson"
          },
          "room": {
            "type": "string",
            "example": "Lab 3"
          },
          "meetingDay": {
            "type": "string",
            "example": "Wednesday"
          },
          "meetingTime": {
            "type": "string",
            "example": "15:00"
          }
        }
      },
      "Room": {
        "type": "object",
        "properties": {
          "roomName": {
            "type": "string",
            "example": "Room 1"
          },
          "building": {
            "type": "string",
            "example": "Main Hall"
          },
          "capacity": {
            "type": "integer",
            "example": 30
          },
          "roomType": {
            "type": "string",
            "example": "Lecture"
          }
        }
      }
    }
  }
}